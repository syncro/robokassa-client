
group = 'ru.robokassa'
version = '0.0.1'


buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.0'
    }
}


ext {
    bintrayRepo = 'robokassa-client'
    bintrayName = 'robokassa-client'

    publishedGroupId = group
    libraryName = 'robokassa-client'
    artifact = 'robokassa-client'

    libraryDescription = 'Robokassa payments library'

    siteUrl = 'https://github.com/syncro/robokassa-client'
    gitUrl = 'https://github.com/syncro/robokassa-client.git'

    libraryVersion = version

    developerId = 'syncro'
    developerName = 'Aleksey Oblozhko'
    developerEmail = 'oblozhko@gmail.com'

    licenseName = 'GNU Lesser General Public License, version 3'
    licenseUrl = 'https://opensource.org/licenses/LGPL-3.0'
    allLicenses = ["LGPL-3.0"]
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'

jar {
    baseName = 'robokassa-client'
    version = version
}

repositories {
    mavenCentral()
    jcenter()
    mavenLocal()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compileOnly("org.projectlombok:lombok:1.16.16")
    compile("com.fasterxml.jackson.core:jackson-annotations:2.8.7")
    compile("com.fasterxml.jackson.core:jackson-databind:2.8.7")
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

apply plugin: 'maven'


uploadArchives {
    repositories.mavenDeployer {
        pom.groupId = group
        pom.artifactId = 'robokassa-client'
        pom.version = version
    }
}


apply plugin: 'com.jfrog.bintray'

version = libraryVersion

if (project.hasProperty("android")) { // Android libraries
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }
} else { // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        userOrg = 'syncro'
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = 'https://github.com/syncro/robokassa-client'
        licenses = ["LGPL-3.0"]
        publish = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
            gpg {
                // optional GPG encryption. Default is false.
                sign = false
                //passphrase = properties.getProperty("bintray.gpg.password")
            }
        }
    }
}
